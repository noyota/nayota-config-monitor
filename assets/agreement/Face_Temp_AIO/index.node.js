const EventEmitter=require("events").EventEmitter,request=require("request"),asyncHandler=require("express-async-handler");class HttpRoute extends EventEmitter{constructor(e,t){super(),t.route("/face-temp-aio/snap").post(asyncHandler(async(e,t)=>{const s=e.body,i=s.info.DeviceID;this.emit(`node${i}`,{10:JSON.stringify(s),11:s.SanpPic,12:s.info.Temperature,13:s.info.CreateTime}),console.log("snap",s),t.json({code:200,desc:"OK"})})),t.route("/face-temp-aio/verify").post(asyncHandler(async(e,t)=>{const s=e.body,i=s.info.DeviceID;this.emit(`node${i}`,{0:JSON.stringify(s),1:s.info.Name,2:s.info.PersonType,11:s.SanpPic}),console.log("verify",s),t.json({code:200,desc:"OK"})})),t.route("/face-temp-aio/heartbeat").post(asyncHandler(async(e,t)=>{const s=e.body.info.DeviceID;this.emit(`node${s}`,{}),t.json({code:200,desc:"OK"})}))}async config(e){const t=e.attribute.filter(e=>"SubscribeAddr"===e.key)[0].value,s=e.attribute.filter(e=>"Topics"===e.key)[0].value.split(","),i={operator:"Subscribe",info:{DeviceID:e.shortAddress,Num:s.length,Topics:s,SubscribeAddr:t,SubscribeUrl:{Snap:"/http-api/face-temp-aio/snap",Verify:"/http-api/face-temp-aio/verify",HeartBeat:"/http-api/face-temp-aio/heartbeat"},ResumefromBreakpoint:1,Auth:"none"}},o=await new Promise(async(t,s)=>{request.post({url:`${e.url}/action/Subscribe`,headers:{Authorization:"Basic YWRtaW46YWRtaW4="},body:JSON.stringify(i)},(e,i,o)=>{e?s({message:"发送失败"}):"Fail"===JSON.parse(o).info.Result?s({message:JSON.parse(o).info.Detail}):t("发送成功")})});console.log(o)}async import(e,t,s){}}module.exports=HttpRoute;