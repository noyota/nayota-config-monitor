const EventEmitter=require("events").EventEmitter,asyncHandler=require("express-async-handler"),formidable=require("formidable"),request=require("request"),fs=require("fs"),fsPromises=fs.promises,path=require("path"),xml2js=require("xml2js"),XLSX=require("xlsx"),SDK=require(path.resolve("./server/utils/hik-camera-sdk.js")),parseString=new xml2js.Parser({explicitArray:!1}).parseStringPromise,mongoose=require("mongoose"),Roster=mongoose.model("Roster");class HttpRoute extends EventEmitter{constructor(e,t){super(),t.route("/hik-traffic-ca/records").post(asyncHandler(async(e,t)=>{const r=new formidable.IncomingForm;r.keepExtensions=!0;const a=`upload/${(new Date).getFullYear()}/${(new Date).getMonth()+1}/${(new Date).getDate()}`,s=path.resolve("./assets/"+a);await fsPromises.mkdir(s,{recursive:!0}),r.uploadDir=s;const{files:i}=await new Promise((t,a)=>{r.parse(e,(e,r,s)=>{e&&a(e),t({fields:r,files:s})})}),l=await fsPromises.readFile(i["anpr.xml"].path),o=await parseString(l),{ipAddress:n,macAddress:u,channelID:c,dateTime:p,activePostCount:d,eventType:f,eventState:m,eventDescription:h,ANPR:v}=o.EventNotificationAlert,{country:y,licensePlate:w,direction:D,confidenceLevel:b,plateType:g,plateColor:k,licenseBright:S,vehicleInfo:P,pictureInfoList:E,originalLicensePlate:x}=v;console.log(u,y,w,D,b,g,k,S,P,E,x);const R=await Roster.findOne({"value.车牌":w});let q=2;null!=R&&(q=parseInt(R.value["黑白名单"]));const Y={};Y.file=fs.createReadStream(i["detectionPicture.jpg"].path);const L=process.env.RESOURCE_SERVER,N=await new Promise((e,t)=>{request.post({url:L+"/api/uploads",formData:Y},function(r,a,s){if(r)return t("upload failed:",r);s=JSON.parse(s),e(L+s.data)})});this.emit(`node${u}`,{0:JSON.stringify({ipAddress:n,macAddress:u,channelID:c,dateTime:p,country:y,licensePlate:w,plateType:g,plateColor:k,type:q,direction:D,confidenceLevel:b,plateRect:E.length>1?E[1].plateRect:null,image:N,vehicle_body:P.vehileModel,vehicle_mark:P.vehileType,vehicle_color:P.color}),1:w,2:q,3:N}),t.send("success")}))}async config(e){const t=e.attribute.filter(e=>"username"===e.key)[0].value,r=e.attribute.filter(e=>"password"===e.key)[0].value,a=e.attribute.filter(e=>"channel"===e.key)[0].value,s=e.attribute.filter(e=>"ip"===e.key)[0].value,i=e.attribute.filter(e=>"port"===e.key)[0].value,l={url:e.url,username:t,password:r,channel:{id:a}},o=new SDK(l);await o.setEventHttpHost(s,i,"/http-api/hik-traffic-ca/records"),await o.setAlarmHttpPushProtocol()}async import(e,t,r){const a=e.attribute.filter(e=>"username"===e.key)[0].value,s=e.attribute.filter(e=>"password"===e.key)[0].value,i=e.attribute.filter(e=>"channel"===e.key)[0].value,l={url:e.url,username:a,password:s,channel:{id:i}},o=new SDK(l),n=await HttpRoute.rosterEncode(r);await o.setLicensePlateAuditData(n.buffer)}static async rosterEncode(e){e=e.map((e,t)=>({"No.":t,"Plate No.":e.value["车牌"],"Group(0 black list, 1 white list)":e.value["黑白名单"],"Expiry Date (Format: YYYY-MM-DD, e.g., 2017-12-07)":e.value["有效日期"]})),console.log(e);const t={SheetNames:["sheet1"],Sheets:{sheet1:XLSX.utils.json_to_sheet(e,{header:["No.","Plate No.","Group(0 black list, 1 white list)","Expiry Date (Format: YYYY-MM-DD, e.g., 2017-12-07)"]})}};return{fileName:"plate.xls",buffer:XLSX.write(t,{bookType:"biff8",type:"buffer"})}}static async rosterDecode(e){const t=XLSX.read(e);return XLSX.utils.sheet_to_json(t.Sheets.sheet1).map(e=>({value:{"车牌":e["Plate No."],"黑白名单":e["Group(0 black list, 1 white list)"],"有效日期":e["Expiry Date (Format: YYYY-MM-DD, e.g., 2017-12-07)"]}}))}async export(e,t){const r=e.attribute.filter(e=>"username"===e.key)[0].value,a=e.attribute.filter(e=>"password"===e.key)[0].value,s=e.attribute.filter(e=>"channel"===e.key)[0].value,i={url:e.url,username:r,password:a,channel:{id:s}},l=new SDK(i);await l.getLicensePlateAuditData()}}module.exports=HttpRoute;